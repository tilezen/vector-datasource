# -*- encoding: utf-8 -*-
import dsl
from shapely.wkt import loads as wkt_loads

from . import FixtureTest


class AddMissingBoundaries(FixtureTest):
    def test_statistical(self):
        # NE data - no OSM elements
        # boundary between NV and CA is _also_ a "statistical" boundary
        self.generate_fixtures(dsl.way(1, wkt_loads('LINESTRING (-114.6282165963189 35.00356854075547, -114.8142517523165 35.14643963528087, -115.0000183527648 35.28906658815248, -115.1937927667228 35.4378458849796, -115.3742615167556 35.57954510352367, -115.5349304625707 35.70571697835584, -115.695599408386 35.83191326798288, -115.8562683533019 35.95808514281507, -116.0169128852215 36.08425701854654, -116.1775818301374 36.21042889337871, -116.3382507750532 36.33660076821088, -116.4988953060735 36.46274822824814, -116.6595398379931 36.58892010308029, -116.8428650326951 36.72671307225045, -117.026214642192 36.86450604142063, -117.2095642516888 37.00234783838203, -117.3928894472902 37.14014080755221, -117.5761902280966 37.27793377492374, -117.7595398375934 37.41575115798953, -117.9428894470903 37.55354412715974, -118.1262146417923 37.6913370963299, -118.3604431577255 37.85481365812381, -118.5946716736588 38.0183146347126, -118.8289001886927 38.1817911974058, -119.0631042907304 38.34526776009902, -119.2973328057644 38.50876873578853, -119.5315613216977 38.67226971327666, -119.7657898376309 38.8357462750705, -120.0000183526648 38.99922283776374, -120.0001160100458 39.01323651005686, -120.0001160100458 39.06863201775338, -120.0001404239414 39.25181072818253, -120.0001892517325 39.43501385340659, -120.0002380804231 39.6181681499401, -120.0002624943187 39.80134686126859, -120.0002869082142 39.98452557169776, -120.0003357360054 40.16772869692183, -120.0004089776922 40.35088299435468, -120.0004089776922 40.53406170478381, -120.0004578063827 40.71726483000788, -120.0005066350731 40.90044354133634, -120.0005554628643 41.08362225176546, -120.0005798767599 41.26677654919838, -120.0006042906555 41.44997967442242, -120.000653119346 41.63315838485156, -120.0007263610327 41.81633709618001, -120.0007507749283 41.99954022140405)'), {u'scalerank': 2.0, u'objectid': 7975, u'fid_ne_10m': 7805, u'name_len_l': 10, u'name_alt_l': u'CA|Calif.', u'name_alt_r': u'NV|Nev.', u'adm0_a3': u'USA', u'name_len_r': 6, u'shape_leng': 949.091086446, u'mapcolor9': 1, u'sov_a3': u'US1', u'note': u'US_1', u'source': u'naturalearthdata.com', u'type': u'', u'name_r': u'Nevada', u'mapcolor13': 1, u'adm0_name': u'United States of America', u'featurecla': u'Admin-1 statistical boundary', u'name_l': u'California', u'name': u'California - Nevada', u'name_loc_r': u'', u'name_loc_l': u''}))

        self.assert_has_feature(
            7, 21, 49, 'boundaries',
            {'kind': 'region'})

    def test_statistical_meta(self):
        # boundary between MT and ND is _also_ a "statistical meta" boundary
        self.generate_fixtures(dsl.way(1, wkt_loads('LINESTRING (-104.047574447203 48.9926178998961, -104.0462341740679 48.80229901039099, -104.0462585879635 48.63545330672468, -104.0462585879635 48.46860760305839, -104.0462585879635 48.30176190029148, -104.0462585879635 48.13489178272955, -104.0462585879635 47.96802166606697, -104.0462585879635 47.80117596330009, -104.0462585879635 47.63433026053308, -104.0462585879635 47.4674845568668, -104.0462585879635 47.30063885320046, -104.0462585879635 47.13379315043352, -104.0462585879635 46.96694744676721, -104.0462585879635 46.80010174400024, -104.0462585879635 46.63325604123326, -104.0462585879635 46.46641033846634, -104.0462585879635 46.29956463480006, -104.0462585879635 46.13269451813748, -104.0448913999182 45.94202068870381)'), {u'scalerank': 2.0, u'objectid': 1179, u'fid_ne_10m': 1133, u'name_len_l': 12, u'name_alt_l': u'ND|N.D.', u'name_alt_r': u'MT|Mont.', u'adm0_a3': u'USA', u'name_len_r': 7, u'shape_leng': 229.670790497, u'mapcolor9': 1, u'sov_a3': u'US1', u'note': u'US_101', u'source': u'naturalearthdata.com', u'type': u'', u'name_r': u'Montana', u'mapcolor13': 1, u'adm0_name': u'United States of America', u'featurecla': u'Admin-1 statistical meta bounds', u'name_l': u'North Dakota', u'name': u'North Dakota - Montana', u'name_loc_r': u'', u'name_loc_l': u''}))

        self.assert_has_feature(
            7, 27, 44, 'boundaries',
            {'kind': 'region'})

global:
  - &ne_country_capital [Admin-0 capital, Admin-0 capital alt, Admin-0 region capital]
  - &ne_region_capital [Admin-1 capital, Admin-1 region capital]

  - &output_properties
    name: {col: name}
    source: {col: source}
    admin_level: {col: admin_level}
    population: {col: population}
    country_capital:
      case:
        - when: {featurecla: *ne_country_capital}
          then: true
        - else:
            call:
              func: util.tag_str_to_bool
              args: [ { col: capital } ]
    region_capital:
      case:
        - when: {featurecla: *ne_region_capital}
          then: true
        - else:
            call:
              func: util.tag_str_to_bool
              args: [ { col: state_capital } ]
    mz_n_photos: {col: mz_n_photos}
    area:
      call:
        func: util.safe_int
        args: [ { col: area } ]
    min_zoom: {col: min_zoom}
    max_zoom: {col: max_zoom}
    is_landuse_aoi:
      call:
        func: util.true_or_none
        args: [ { col: is_landuse_aoi } ]
    wikidata_id: {col: wikidata}

  - &ne_places_min_zoom
    lookup:
      key: { col: scalerank }
      op: '<='
      table:
        - [ 2, 0 ]
        - [ 3, 1 ]
        - [ 4, 2 ]
        - [ 5, 4 ]
        - [ 6, 6 ]
        - [ 7, 7 ]
        - [ 9, 9 ]
      default: 10

  - &alternate_fclass
    fclass_iso: { col: fclass_iso }
    fclass_ar: { col: fclass_ar }
    fclass_bd: { col: fclass_bd }
    fclass_br: { col: fclass_br }
    fclass_cn: { col: fclass_cn }
    fclass_de: { col: fclass_de }
    fclass_eg: { col: fclass_eg }
    fclass_es: { col: fclass_es }
    fclass_fr: { col: fclass_fr }
    fclass_gb: { col: fclass_gb }
    fclass_gr: { col: fclass_gr }
    fclass_id: { col: fclass_id }
    fclass_il: { col: fclass_il }
    fclass_in: { col: fclass_in }
    fclass_it: { col: fclass_it }
    fclass_jp: { col: fclass_jp }
    fclass_ko: { col: fclass_ko }
    fclass_ma: { col: fclass_ma }
    fclass_nl: { col: fclass_nl }
    fclass_np: { col: fclass_np }
    fclass_pk: { col: fclass_pk }
    fclass_pl: { col: fclass_pl }
    fclass_ps: { col: fclass_ps }
    fclass_pt: { col: fclass_pt }
    fclass_ru: { col: fclass_ru }
    fclass_sa: { col: fclass_sa }
    fclass_se: { col: fclass_se }
    fclass_tr: { col: fclass_tr }
    fclass_tw: { col: fclass_tw }
    fclass_us: { col: fclass_us }
    fclass_vn: { col: fclass_vn }

filters:
  - filter:
      meta.source: wof
      placetype:
        - neighbourhood
        - microhood
        - macrohood
        - borough
    min_zoom: {col: min_zoom}
    output:
      <<: *output_properties
      kind: {col: placetype}
    table: wof
    extra_columns: [ min_zoom ]
  - filter: {name: true, place: country}
    # note: min_zoom needs to be smaller than any min_label in
    # ne_10m_admin_0_countries to make sure we're not dropping any by not being
    # included in the PostgreSQL index.
    #
    # note: also, we knock this down to 6 during post-processing for any country
    # which doesn't match an NE curated one.
    min_zoom: 1
    output:
      <<: *output_properties
      kind: country
      __ne_min_zoom: {col: __ne_min_zoom}
      __ne_max_zoom: {col: __ne_max_zoom}
    table: osm
  - filter: {name: true, place: state}
    # note: min_zoom needs to be smaller than any min_label in
    # ne_10m_admin_1_states_provinces to make sure we're not dropping any by
    # not being included in the PostgreSQL index.
    #
    # note: also, we knock this down to 6 during post-processing for any state
    # which doesn't match an NE curated one.
    min_zoom: 3
    output:
      <<: *output_properties
      kind: region
      kind_detail: state
      __ne_min_zoom: {col: __ne_min_zoom}
      __ne_max_zoom: {col: __ne_max_zoom}
    table: osm
  - filter: {name: true, place: province}
    # note: min_zoom needs to be smaller than any min_label in
    # ne_10m_admin_1_states_provinces to make sure we're not dropping any by
    # not being included in the PostgreSQL index.
    #
    # note: also, we knock this down to 6 during post-processing for any province
    # which doesn't match an NE curated one.
    min_zoom: 3
    output:
      <<: *output_properties
      kind: region
      kind_detail: province
      __ne_min_zoom: {col: __ne_min_zoom}
      __ne_max_zoom: {col: __ne_max_zoom}
    table: osm
  - filter: {name: true, population: true, place: [city, town]}
    min_zoom: 8
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: {col: place}
    table: osm
  - filter: {name: true, place: city}
    min_zoom: 9
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: city
      population: 10000
    table: osm
  - filter: {name: true, place: town}
    min_zoom: 10
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: town
      population: 5000
    table: osm
  - filter: {name: true, population: true, place: village}
    min_zoom: 12
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: village
    table: osm
  - filter: {name: true, place: village}
    min_zoom: 13
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: village
      population: 2000
    table: osm
  - filter: {name: true, population: true, place: locality}
    min_zoom: 13
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: locality
    table: osm
  - filter: {name: true, place: locality}
    min_zoom: 14
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: locality
      population: 1000
    table: osm
  - filter: {name: true, population: true, place: hamlet}
    min_zoom: 13
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: hamlet
    table: osm
  - filter: {name: true, place: hamlet}
    min_zoom: 14
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: hamlet
      population: 200
    table: osm
  - filter: {name: true, population: true, place: isolated_dwelling}
    min_zoom: 14
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: isolated_dwelling
    table: osm
  - filter: { name: true, place: isolated_dwelling }
    min_zoom: 15
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: isolated_dwelling
      population: 100
    table: osm
  - filter: { name: true, population: true, place: farm }
    min_zoom: 14
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: farm
    table: osm
  - filter: {name: true, place: farm}
    min_zoom: 15
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      kind_detail: farm
      population: 50
    table: osm

  - filter:
      scalerank: true
      featurecla: *ne_country_capital
    min_zoom: *ne_places_min_zoom
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      country_capital: true
    table: ne
  - filter:
      scalerank: true
      featurecla: *ne_region_capital
    min_zoom: *ne_places_min_zoom
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
      region_capital: true
    table: ne
  - filter: {featurecla: Populated place, scalerank: true}
    min_zoom: *ne_places_min_zoom
    output:
      <<: [*output_properties, *alternate_fclass]
      kind: locality
    table: ne

  - filter:
      scalerank: true
      featurecla: [Historic place]
    min_zoom: *ne_places_min_zoom
    output:
      <<: *output_properties
      kind: locality
      kind_detail: hamlet
    table: ne
  - filter:
      scalerank: true
      featurecla: [Scientific station]
    min_zoom: *ne_places_min_zoom
    output:
      <<: *output_properties
      kind: locality
      kind_detail: scientific_station
    table: ne

global:

  - &output_properties
    source: {col: source}
    name: {col: name}
    min_zoom: {col: min_zoom}
    maritime_boundary: {col: maritime_boundary}

  # NOTE: Natural Earth 1:50 million used zooms 0,1,2,3,4
  #       and only has USA, Canada, Brazil, and Australia
  #       all with scalerank of 2 (a documented NE omission).
  #       Then 1:10 million NE is selected at zooms 5, 6, 7
  #       and includes most all countries, with various scalerank
  #       but is inconsistent with 1:50 in scalerank=2 so countries
  #       like Russia will "pop" in at 5, but with min_zoom of 2
  #       (and India, China, Indonesia, and South Africa).
  - &ne_region_boundaries_min_zoom
    lookup:
      key: { col: scalerank }
      op: '<='
      table:
        - [ 7,   0 ]
        - [ 2,   2 ]
        - [ 3,   3 ]
        - [ 5,   4 ]
        - [ 5.5, 5 ]
        - [ 6,   6 ]
        - [ 6.7, 7 ]
        - [ 6.8, 8 ]
        - [ 7,   9 ]
      default: null

  #
  - &ne_country_boundaries_kind
    lookup:
      key: { col: featurecla }
      op: '=='
      table:
        - [ 'disputed', 'Disputed (please verify)' ]
        - [ 'indefinite', 'Indefinite (please verify)' ]
        - [ 'indeterminate', 'Indeterminant frontier' ]
        - [ 'country', 'International boundary (verify)' ]
        - [ 'lease_limit', 'Lease limit' ]
        - [ 'line_of_control', 'Line of control (please verify)' ]
        - [ 'overlay_limit', 'Overlay limit' ]
        - [ 'unrecognized_country', 'Unrecognized' ]
        - [ 'map_unit', 'Map unit boundary' ]
        - [ 'disputed_breakaway', 'Breakaway' ]
        - [ 'disputed_claim', 'Claim boundary' ]
        - [ 'disputed_elusive', 'Elusive frontier' ]
        - [ 'disputed_reference_line', 'Reference line' ]
      default: null

  - &ne_localized_kind_properties
    'kind:iso': {col: fclass_iso }
    'kind:ar': {col: fclass_ar }
    'kind:bd': {col: fclass_bd }
    'kind:br': {col: fclass_br }
    'kind:cn': {col: fclass_cn }
    'kind:de': {col: fclass_de }
    'kind:eg': {col: fclass_eg }
    'kind:es': {col: fclass_es }
    'kind:fr': {col: fclass_fr }
    'kind:gb': {col: fclass_gb }
    'kind:gr': {col: fclass_gr }
    'kind:id': {col: fclass_id }
    'kind:il': {col: fclass_il }
    'kind:in': {col: fclass_in }
    'kind:it': {col: fclass_it }
    'kind:jp': {col: fclass_jp }
    'kind:ko': {col: fclass_ko }
    'kind:ma': {col: fclass_ma }
    'kind:nl': {col: fclass_nl }
    'kind:np': {col: fclass_np }
    'kind:pk': {col: fclass_pk }
    'kind:pl': {col: fclass_pl }
    'kind:ps': {col: fclass_ps }
    'kind:pt': {col: fclass_pt }
    'kind:ru': {col: fclass_ru }
    'kind:sa': {col: fclass_sa }
    'kind:se': {col: fclass_se }
    'kind:tr': {col: fclass_tr }
    'kind:tw': {col: fclass_tw }
    'kind:us': {col: fclass_us }
    'kind:vn': {col: fclass_vn }

  # this is a hack to get around the fact that boundary features with the same
  # tags exist in both the polygons and lines table. osm2pgsql makes geometries
  # for boundary polygon relations, but there are also a lot of boundary way
  # lines which match the same filters.
  #
  # this excludes them by looking for only polygons and then setting the
  # mz_boundary_from_polygon flag when the geometry is converted back to a
  # linestring. since that flag shouldn't exist in the original data, we exclude
  # the features in the plant_osm_line table (except those we actually want -
  # disputes and claims).
  - &boundary_poly
    any:
      - geom_type: polygon
      - all:
          - geom_type: line
          - mz_boundary_from_polygon: true

  - &dispute_properties
    claimed_by: { col: claimed_by }
    recognized_by: { col: recognized_by }
    disputed_by: { col: disputed_by }
    tz_admin_level: {col: admin_level }
    dispute_id: {col: 'ne:brk_a3'}

filters:

  # kind pre-generated for buffered_land
  - filter:
      kind: maritime
      source: tilezen.org
    min_zoom: 8
    output:
      <<: *output_properties
      kind: {col: kind}

  # OSM disputed boundaries
  #
  # we track two kinds of features from OSM for indicating disputes:
  #
  # 1. **claims**, which have `boundary=claim, claimed_by=*, admin_level=*`
  #    tags. these indicate borders which aren't generally recognized, but
  #    should appear in the viewpoint of the `claimed_by=` value. additionally,
  #    extra viewpoints which don't make a claim for themselves but still want
  #    the claimant's view reflected in their own can be specified in a
  #    `recognized_by=*` tag. There are also cases where boundary=claim but there
  #    is no corresponding claimed_by - these will have admin_level:XX tags instead
  #    that will dictate what kind each viewpoint should have.
  #
  # 2. **disputes**, which have `dispute=yes` or `disputed=yes`, plus a list of
  #    disputant viewpoints in the `disputed_by=*` tag. when a viewpoint is
  #    listed in `disputed_by` then the boundary will have its `kind:xx` set to
  #    `unrecognized_*` (where XX is the viewpoint / country code and * is the
  #    kind of boundary it is).
  #
  - filter:
      all:
        - geom_type: line
        - admin_level: ['2', '4', '6']
        - boundary: claim
        - any:
            - claimed_by: true
            - disputed_by: true
    min_zoom: 8
    output:
      <<: [ *output_properties, *dispute_properties ]
      kind: disputed_claim
    table: osm
  # these filters look for claims that don't have a claimed_by
  # they should have different point of view tags for admin_level:XX
  - filter: {admin_level: '2', boundary: claim, geom_type: line}
    min_zoom: 8
    output:
      <<: [*output_properties, *dispute_properties]
      kind: country
    table: osm
  - filter: {admin_level: '4', boundary: claim, geom_type: line}
    min_zoom: 8
    output:
      <<: [*output_properties, *dispute_properties]
      kind: region
    table: osm
  - filter: {admin_level: '6', boundary: claim, geom_type: line}
    min_zoom: 8
    output:
      <<: [*output_properties, *dispute_properties]
      kind: county
    table: osm
  # These are kind=disputed_reference_lines that, for viewpoint XX in disputed_by,
  # becomes kind:xx=unrecognized_disputed_reference_line
  - filter: {admin_level: ['2','4','6'], boundary: disputed, geom_type: line}
    min_zoom: 8
    output:
      <<: [ *output_properties, *dispute_properties ]
      kind: disputed_reference_line
      kind_detail: {col: admin_level }
    table: osm
  - filter:
      all:
        - geom_type: line
        - disputed_by: true
        - any:
            - dispute: 'yes'
            - disputed: 'yes'
    min_zoom: 8
    output:
      <<: [ *output_properties, *dispute_properties ]
      kind: mz_internal_dispute_mask
    table: osm

  # osm
  - filter:
      all:
        - *boundary_poly
        - any:
          - all:
              boundary: administrative
              boundary:type: aboriginal_lands
          - all:
              boundary: protected_area
              protect_class: '24'
          - boundary: aboriginal_lands
    min_zoom: 8
    output:
      <<: *output_properties
      kind: aboriginal_lands
      kind_detail:
        case:
          - when:
              admin_level: ['2', '4', '6', '8']
            then: { col: admin_level }
    table: osm
  - filter: {admin_level: '2', boundary: administrative, <<: *boundary_poly}
    min_zoom: 8
    output:
      <<: *output_properties
      kind: country
      kind_detail: '2'
    table: osm
  - filter: {admin_level: '4', boundary: administrative, <<: *boundary_poly}
    min_zoom: 8
    output:
      <<: *output_properties
      kind: region
      kind_detail: '4'
    table: osm
  - filter: {admin_level: '6', boundary: administrative, <<: *boundary_poly}
    min_zoom: 10
    output:
      <<: *output_properties
      kind: county
      kind_detail: '6'
    table: osm
  # NOTE: the min_zoom of 11 here needs to be reflected in the early
  # name-dropping in queries.yaml - so that the two match and we don't get
  # names popping in and out. if the min_zoom is changed here, then it should
  # also be changed there (and vice-versa)!
  - filter: {admin_level: '8', boundary: administrative, <<: *boundary_poly}
    min_zoom: 11
    output:
      <<: *output_properties
      kind: locality
      kind_detail: '8'
    table: osm

  # ne
  - filter:
      featurecla:
        - 'Disputed (please verify)'
        - 'Indefinite (please verify)'
        - 'Indeterminant frontier'
        - 'International boundary (verify)'
        - 'Lease limit'
        - 'Line of control (please verify)'
        - 'Overlay limit'
        - 'Map unit boundary'
    min_zoom: { col: min_zoom }
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: *ne_country_boundaries_kind
      kind_detail: '2'
      dispute_id: { col: 'ne:brk_a3' }
    table: ne

  # ne for disputed kind:xx POV we want to always include
  # the disputed lines early so when that POV enables them
  # and the data is available in tiles
  - filter:
      featurecla:
        - 'Breakaway'
        - 'Claim boundary'
        - 'Elusive frontier'
        - 'Reference line'
        - 'Unrecognized'
    min_zoom: 1
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: *ne_country_boundaries_kind
      kind_detail: '2'
      dispute_id: { col: 'ne:brk_a3' }
    table: ne

  - filter:
      featurecla:
        - Admin-1 region boundary
    min_zoom: *ne_region_boundaries_min_zoom
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: macroregion
      kind_detail: '3'
    extra_columns: [scalerank]
    table: ne
  - filter:
      featurecla:
        - Admin-1 boundary
        - Admin-1 statistical boundary
        - Admin-1 statistical meta bounds
        - 1st Order Admin Lines
    min_zoom: *ne_region_boundaries_min_zoom
    extra_columns: [scalerank]
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: region
      kind_detail: '4'
    table: ne
  - filter:
      featurecla:
        - Unrecognized Admin-1 region boundary
    min_zoom: *ne_region_boundaries_min_zoom
    extra_columns: [scalerank]
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: unrecognized_macroregion
      kind_detail: '4'
      dispute_id: { col: 'ne:brk_a3' }
    table: ne
  - filter:
      featurecla:
        - Unrecognized Admin-1 boundary
        - Unrecognized Admin-1 statistical boundary
        - Unrecognized Admin-1 statistical meta bounds
    min_zoom: *ne_region_boundaries_min_zoom
    extra_columns: [scalerank]
    output:
      <<: [*output_properties, *ne_localized_kind_properties]
      kind: unrecognized_region
      kind_detail: '4'
      dispute_id: { col: 'ne:brk_a3' }
    table: ne

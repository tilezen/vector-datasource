globals:
  - &output_properties
    name: {col: name}
    area:
      call:
        func: util.safe_int
        args: [ { col: area } ]
    source: {col: source}
    min_zoom: {col: min_zoom}
    mz_label_placement: {col: mz_label_placement}
    label_placement: {col: label_placement}
    boundary: {col: boundary}
    layer : {col: layer}
    tunnel: {col: tunnel}
    wikidata_id: {col: wikidata}
  - &water_standard_properties_osm
      <<: *output_properties
      intermittent:
        case:
          - when:
              intermittent: 'yes'
            then: true
          - when:
              { basin: [infiltration, detention] }
            then: true
  - &water_polygon_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        # OSM data starts at z8, but we should include some stuff at earlier so
        # the transition doesn't have a gap in it.
        - [ 1, 20000000000 ]
        - [ 2, 10000000000 ]
        - [ 3,  5000000000 ]
        - [ 4,  2000000000 ]
        - [ 5,   500000000 ]
        - [ 6,   200000000 ]
        - [ 7,    50000000 ]
        - [ 8,    20000000 ]
        - [ 9,     5000000 ]
        - [ 10,    1000000 ]
        - [ 11,     200000 ]
        - [ 12,      50000 ]
        - [ 13,      20000 ]
        - [ 14,       2000 ]
        - [ 15,       1000 ]
        - [ 16,        400 ]
      default: 17
  - &water_sea_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      # OSM polygons
      table:
        - [ 2,   80000000000 ]
        - [ 3,   40000000000 ]
        - [ 4,   10000000000 ]
        - [ 5,     500000000 ]
        - [ 6,     200000000 ]
        - [ 7,      40000000 ]
      # OSM points
      default: 4
  - &water_standard_min_zoom
    case:
      - when: { way_area: { min: 102400 } }
        then: { min: [ 9, { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 1.066 ] } } } ] }
      - else: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 1.066 ] } } }

filters:
  #
  # OSM water "place" features (ocean, sea labels) from point and polygon tables
  #
  - filter: {name: true, place: ocean}
    min_zoom: 1
    output:
      <<: *output_properties
      kind: ocean
    table: osm
  # most seas are points, but some area areas
  - filter: {name: true, place: sea}
    min_zoom: 4 # *water_sea_min_zoom
    output:
      <<: *output_properties
      kind: sea
    table: osm

  #
  # OSM regular water features
  #

  # Not show covered water in the water layer. This filter has to be placed before filter: {natural: water}
  - filter:
      covered: "yes"
    min_zoom: null
    output:
      kind: null
  - filter: {waterway: riverbank}
    min_zoom: *water_polygon_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: riverbank
    table: osm
  - filter: {waterway: dock}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: dock
    table: osm
  - filter: {amenity: fountain}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: fountain
    table: osm
  - filter: {natural: water}
    min_zoom: *water_polygon_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: water
      # OSM buries the detailed type of water so let's surface that, see Issue #984
      # in v2.x series we'd promote these to kind values, but we add them as kind_detail
      # here as a non-breaking change for v1.x series as a bridge
      kind_detail:
        case:
          # existing Tilezen kinds
          - when: { water: [basin, canal, ditch, drain, lake, river, stream] }
            then: { col: water }
          # other common OSM water values that we'd expect to map to Tilezen lake value
          - when: { water: [lagoon, oxbow, pond, reservoir, wastewater] }
            then: lake
      reservoir:
        case:
          - when: { water: [reservoir] }
            then: true
      alkaline:
        case:
          - when: { water: [lagoon, salt, salt_pool] }
            then: true
    table: osm
  - filter: {natural: bay}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: bay
    table: osm
  - filter: {natural: strait}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: strait
    table: osm
  - filter: {natural: fjord}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: fjord
    table: osm
  - filter: {landuse: basin}
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: basin
    table: osm
  - filter: {landuse: reservoir}
    min_zoom: *water_polygon_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: lake
      reservoir: true
    table: osm
  - filter:
      any:
        amenity: swimming_pool
        leisure: swimming_pool
    min_zoom: *water_polygon_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: swimming_pool
    table: osm
  - filter: {waterway: canal}
    min_zoom:
      case:
        - when: { boat: 'yes' }
          then: 9
        - else: 11
    output:
      <<: *water_standard_properties_osm
      kind: canal
      boat:
        case:
          - when:  { boat: 'yes' }
            then: 'yes'
    table: osm
  - filter: {waterway: river}
    min_zoom: 9
    output:
      <<: *water_standard_properties_osm
      kind: river
    table: osm
  - filter: {waterway: stream}
    min_zoom: 11
    output:
      <<: *water_standard_properties_osm
      kind: stream
    table: osm
  - filter: {waterway: ditch}
    min_zoom: 16
    output:
      <<: *water_standard_properties_osm
      kind: ditch
    table: osm
  - filter: {waterway: drain}
    min_zoom: 16
    output:
      <<: *water_standard_properties_osm
      kind: drain
    table: osm
  # reef
  - filter:
      natural: reef
      geom_type: polygon
    min_zoom: *water_standard_min_zoom
    output:
      <<: *water_standard_properties_osm
      kind: reef
      kind_detail:
        case:
          - when: { reef: [coral, rock, sand] }
            then: { col: reef }
    table: osm

  #
  # NE features
  #
  - filter: {featurecla: Coastline}
    min_zoom: 0
    output:
      <<: *output_properties
      kind: ocean
    table: ne
  - filter: {featurecla: Alkaline Lake}
    min_zoom: { col: min_zoom }
    output:
      <<: *output_properties
      kind: lake
      alkaline: true
    table: ne
  - filter: {featurecla: Lake}
    min_zoom: { col: min_zoom }
    output:
      <<: *output_properties
      kind: lake
    table: ne
  - filter: {featurecla: Reservoir}
    min_zoom: { col: min_zoom }
    output:
      <<: *output_properties
      kind: lake
      reservoir: true
    table: ne
  - filter: {featurecla: Playa}
    min_zoom: { col: min_zoom }
    output:
      <<: *output_properties
      kind: playa
    table: ne
  - filter: {featurecla: Ocean}
    min_zoom: { col: min_zoom }
    output:
      <<: *output_properties
      kind: ocean
    table: ne

  #
  # OSM ocean water polygons from alternate source
  - filter: {meta.source: shp}
    min_zoom: 0
    output:
      <<: *output_properties
      kind: ocean
    table: shp
